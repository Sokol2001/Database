name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: password
          ACCEPT_EULA: Y
      mongodb:
        image: mongo
        ports:
          - 27017:27017
  
    steps:

      - name: azuright
        uses: potatoqualitee/azuright@v1.1
        
      - name: Azure Cosmos Emulator
        uses: galvesribeiro/AzureCosmosAction@v1.0.0

      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      
        # run build and test           
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=ManagedCode.Repository.Tests/lcov.info

      - name : coverlet
        uses: b3b00/coverlet-action@1.1.9
        with:
          testProject: 'ManagedCode.Repository.Tests/ManagedCode.Repository.Tests.csproj'
          output: 'lcov.info'
          outputFormat: 'lcov'
          excludes: '[program]*,[test]test.*'
      - name: coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{secrets.GITHUB_TOKEN }}
          path-to-lcov: ManagedCode.Storage.Tests/lcov.info