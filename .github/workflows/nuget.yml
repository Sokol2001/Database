name: nuget

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
          
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Publish Repository.Core to NuGet
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        PROJECT_FILE_PATH: ManagedCode.Repository.Core/ManagedCode.Repository.Core.csproj
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>
        NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
        
    - name: Publish Repository.AzureTable to NuGet
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        PROJECT_FILE_PATH: ManagedCode.Repository.AzureTable/ManagedCode.Repository.AzureTable.csproj
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>
        NUGET_KEY: ${{ secrets.NUGET_API_KEY }}  
        
    - name: Publish Repository.CosmosDB to NuGet
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        PROJECT_FILE_PATH: ManagedCode.Repository.CosmosDB/ManagedCode.Repository.CosmosDB.csproj
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>
        NUGET_KEY: ${{ secrets.NUGET_API_KEY }}   
        
    - name: Publish Repository.LiteDB to NuGet
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        PROJECT_FILE_PATH: ManagedCode.Repository.LiteDB/ManagedCode.Repository.LiteDB.csproj
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>
        NUGET_KEY: ${{ secrets.NUGET_API_KEY }}        
        
        
        
        
        
        
